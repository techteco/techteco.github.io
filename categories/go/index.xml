<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GO on Jot down for myself</title><link>https://techteco.github.io/categories/go/</link><description>Recent content in GO on Jot down for myself</description><generator>Hugo</generator><language>ja</language><copyright>TechTeco</copyright><lastBuildDate>Fri, 31 May 2024 15:00:00 +0900</lastBuildDate><atom:link href="https://techteco.github.io/categories/go/index.xml" rel="self" type="application/rss+xml"/><item><title>【開発環境】VSC+Dev Containers+GO</title><link>https://techteco.github.io/2024/05/31/vsc-go/</link><pubDate>Fri, 31 May 2024 15:00:00 +0900</pubDate><guid>https://techteco.github.io/2024/05/31/vsc-go/</guid><description>&lt;h1 id="vscvisual-studio-code-dev-containers環境">VSC(Visual Studio Code) Dev Containers環境&lt;/h1>
&lt;ul>
&lt;li>参考 : &lt;a href="2024/05/31/vsc-remix-typescript/">【開発環境】VSC(Visual Studio Code)のDev Containersを使って、Remix+TypeScript環境を作る&lt;/a>
&lt;/li>
&lt;/ul>
&lt;h2 id="dev-containers">Dev Containers&lt;/h2>
&lt;h3 id="設定ファイル">設定ファイル&lt;/h3>
&lt;p>設定ファイルは以下の通り。
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>.devcontainer/devcontainer.json&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/p></description></item><item><title>LambdaのGolangでS3を操作する</title><link>https://techteco.github.io/2018/02/09/lambda-go-s3/</link><pubDate>Fri, 09 Feb 2018 22:00:00 +0900</pubDate><guid>https://techteco.github.io/2018/02/09/lambda-go-s3/</guid><description>&lt;h1 id="やること">やること&lt;/h1>
&lt;p>S3に保存されたファイルを取得して、データを追記して保存する&lt;/p>
&lt;ul>
&lt;li>
&lt;p>S3上のファイル存在確認&lt;a href="https://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.ListObjectsV2" target="_blank" rel="noopener">(ListObjectsV2)&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ファイルが存在すれば、ファイル取得&lt;a href="https://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.GetObject" target="_blank" rel="noopener">(GetObject)&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>追記してS3に保存&lt;a href="https://docs.aws.amazon.com/sdk-for-go/api/service/s3/#S3.PutObject" target="_blank" rel="noopener">(PutObject)&lt;/a>
&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="lambdaの作成">Lambdaの作成&lt;/h1>
&lt;p>さっそく&lt;/p></description></item><item><title>Lambda(Golang)からAWS KMSを復号化する方法</title><link>https://techteco.github.io/2018/01/30/lambda-go-kms/</link><pubDate>Tue, 30 Jan 2018 22:00:00 +0900</pubDate><guid>https://techteco.github.io/2018/01/30/lambda-go-kms/</guid><description>&lt;p>KMSについては、&lt;a href="https://techteco.github.io/2018/01/26/kms/">AWS KMSの使い方&lt;/a>
を参考&lt;/p>
&lt;h1 id="環境構築">環境構築&lt;/h1>
&lt;h2 id="暗号化データ">暗号化データ&lt;/h2>
&lt;p>暗号化する。ここでは、&lt;em>&lt;strong>shared&lt;/strong>&lt;/em>(alias)というkeyを使う。&lt;/p>
&lt;p>※自分の環境に合わせて。&lt;/p>
&lt;div class="highlight">&lt;div style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f" id="ano-1">&lt;a style="outline:none;text-decoration:none;color:inherit" href="#ano-1">1&lt;/a>
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f" id="ano-2">&lt;a style="outline:none;text-decoration:none;color:inherit" href="#ano-2">2&lt;/a>
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f" id="ano-3">&lt;a style="outline:none;text-decoration:none;color:inherit" href="#ano-3">3&lt;/a>
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f" id="ano-4">&lt;a style="outline:none;text-decoration:none;color:inherit" href="#ano-4">4&lt;/a>
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f" id="ano-5">&lt;a style="outline:none;text-decoration:none;color:inherit" href="#ano-5">5&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ aws kms encrypt &lt;span style="color:#98c379">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">&lt;/span>--key-id alias/shared &lt;span style="color:#98c379">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">&lt;/span>--plaintext &lt;span style="color:#98c379">&amp;#34;I am seacret word&amp;#34;&lt;/span> &lt;span style="color:#98c379">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">&lt;/span>--output text &lt;span style="color:#98c379">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">&lt;/span>--query CiphertextBlob&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;p>ここで出力された値をLambdaの環境変数に渡します。&lt;/p></description></item><item><title>LambdaのGolangでSlackにメッセージを送る</title><link>https://techteco.github.io/2018/01/28/lambda-go-slack/</link><pubDate>Sun, 28 Jan 2018 22:00:00 +0900</pubDate><guid>https://techteco.github.io/2018/01/28/lambda-go-slack/</guid><description>&lt;h1 id="slackの設定">Slackの設定&lt;/h1>
&lt;h2 id="incoming-webhooks">Incoming WebHooks&lt;/h2>
&lt;p>&lt;em>&lt;strong>Incoming WebHooks&lt;/strong>&lt;/em>を使って、Lambdaからメッセージ送信をする。&lt;/p>
&lt;p>詳細は割愛しますが、ドキュメント [Slack API] (&lt;a href="https://api.slack.com/incoming-webhooks" target="_blank" rel="noopener">https://api.slack.com/incoming-webhooks&lt;/a>
) をみると使い方は簡単です。&lt;/p>
&lt;p>Slackの管理画面&lt;a href="https://XXXXXXXX.slack.com/apps" target="_blank" rel="noopener">https://XXXXXXXX.slack.com/apps&lt;/a>
からIncoming WebHooksの設定を行い、Webhook URLが取得できたら、curlコマンドでテストしてみる。&lt;/p></description></item><item><title>AWS SAMを使ってみる</title><link>https://techteco.github.io/2018/01/27/lambda-go-sample-sam/</link><pubDate>Sat, 27 Jan 2018 22:00:00 +0900</pubDate><guid>https://techteco.github.io/2018/01/27/lambda-go-sample-sam/</guid><description>&lt;h1 id="aws-samとは">AWS SAMとは&lt;/h1>
&lt;p>&lt;a href="https://github.com/awslabs/serverless-application-model" target="_blank" rel="noopener">Github : AWS Serverless Application Model (AWS SAM)&lt;/a>
&lt;/p>
&lt;blockquote>
&lt;p>The goal of AWS SAM is to define a standard application model for serverless applications.
This GitHub project is the starting point for AWS SAM, and contains general information, information about the model, and examples of common applications.&lt;/p>
&lt;/blockquote>
&lt;p>日本語訳&lt;/p>
&lt;blockquote>
&lt;p>AWS SAMの目標は、サーバレスアプリケーション用の標準アプリケーションモデルを定義することです。このGitHubプロジェクトは、AWS SAMの出発点であり、一般的な情報、モデルに関する情報、一般的なアプリケーションの例を含んでいます。&lt;/p></description></item><item><title>待望のAWS LambdaのGolang対応！</title><link>https://techteco.github.io/2018/01/24/lambda-go-sample/</link><pubDate>Wed, 24 Jan 2018 22:00:00 +0900</pubDate><guid>https://techteco.github.io/2018/01/24/lambda-go-sample/</guid><description>&lt;h1 id="公式ドキュメント">公式ドキュメント&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://aws.amazon.com/jp/blogs/compute/announcing-go-support-for-aws-lambda/" target="_blank" rel="noopener">Announcing Go Support for AWS Lambda&lt;/a>
&lt;/li>
&lt;li>&lt;a href="https://docs.aws.amazon.com/ja_jp/lambda/latest/dg/go-programming-model.html" target="_blank" rel="noopener">Programming Model for Authoring Lambda Functions in Go&lt;/a>
&lt;/li>
&lt;/ul>
&lt;h1 id="サンプル">サンプル&lt;/h1>
&lt;p>&lt;a href="https://docs.aws.amazon.com/ja_jp/lambda/latest/dg/go-programming-model-handler-types.html" target="_blank" rel="noopener">Lambda Function Handler (Go)&lt;/a>
を読んで、サンプルを動かしてみる&lt;/p>
&lt;h1 id="前提">前提&lt;/h1>
&lt;ul>
&lt;li>実行環境
&lt;div class="highlight">&lt;div style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f" id="ano-1">&lt;a style="outline:none;text-decoration:none;color:inherit" href="#ano-1">1&lt;/a>
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#55595f" id="ano-2">&lt;a style="outline:none;text-decoration:none;color:inherit" href="#ano-2">2&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ go version
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>go version go1.9.3 darwin/amd64&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;h1 id="サンプルコード">サンプルコード&lt;/h1>
&lt;p>適当なディレクトリを作成して、&lt;em>&lt;strong>main.go&lt;/strong>&lt;/em>という名前でサンプルをそのまま貼り付ける。&lt;/p></description></item><item><title>Golangのバージョン管理GVM(Go Version Manager)の使い方</title><link>https://techteco.github.io/2018/01/23/golang-gvm/</link><pubDate>Tue, 23 Jan 2018 20:00:00 +0900</pubDate><guid>https://techteco.github.io/2018/01/23/golang-gvm/</guid><description>&lt;h1 id="gvmとは">GVMとは&lt;/h1>
&lt;p>&lt;a href="https://github.com/moovweb/gvm" target="_blank" rel="noopener">GVM(Github)&lt;/a>
&lt;/p>
&lt;p>&lt;em>&lt;strong>Go Version Manager&lt;/strong>&lt;/em>の頭文字をとって&lt;em>&lt;strong>GVM&lt;/strong>&lt;/em>&lt;/p>
&lt;p>一言で言うと&lt;/p>
&lt;blockquote>
&lt;p>GVM provides an interface to manage Go versions.&lt;/p>
&lt;/blockquote>
&lt;p>日本語に直訳すると&lt;/p>
&lt;blockquote>
&lt;p>GVMは、Goバージョンを管理するためのインタフェースを提供します。&lt;/p></description></item></channel></rss>