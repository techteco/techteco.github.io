<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GO on Jot down for myself</title><link>https://techteco.github.io/categories/go/</link><description>Recent content in GO on Jot down for myself</description><generator>Hugo</generator><language>ja</language><copyright>TechTeco</copyright><lastBuildDate>Fri, 31 May 2024 19:16:49 +0900</lastBuildDate><atom:link href="https://techteco.github.io/categories/go/index.xml" rel="self" type="application/rss+xml"/><item><title>LambdaのGolangでS3を操作する</title><link>https://techteco.github.io/2018/02/09/lambda-go-s3/</link><pubDate>Fri, 09 Feb 2018 22:00:00 +0900</pubDate><guid>https://techteco.github.io/2018/02/09/lambda-go-s3/</guid><description>やること S3に保存されたファイルを取得して、データを追記して保存する S3上のファイル存在確認(ListObjectsV2) ファイルが存在すれ</description></item><item><title>Lambda(Golang)からAWS KMSを復号化する方法</title><link>https://techteco.github.io/2018/01/30/lambda-go-kms/</link><pubDate>Tue, 30 Jan 2018 22:00:00 +0900</pubDate><guid>https://techteco.github.io/2018/01/30/lambda-go-kms/</guid><description>KMSについては、AWS KMSの使い方 を参考 環境構築 暗号化データ 暗号化する。ここでは、shared(alias)というkeyを使う。 ※自分の</description></item><item><title>LambdaのGolangでSlackにメッセージを送る</title><link>https://techteco.github.io/2018/01/28/lambda-go-slack/</link><pubDate>Sun, 28 Jan 2018 22:00:00 +0900</pubDate><guid>https://techteco.github.io/2018/01/28/lambda-go-slack/</guid><description>Slackの設定 Incoming WebHooks Incoming WebHooksを使って、Lambdaからメッセージ送信をする。 詳細は割愛しますが、ドキュメント [Slack API] (https://api.slack.com/incoming-webhooks ) をみると使い方</description></item><item><title>AWS SAMを使ってみる</title><link>https://techteco.github.io/2018/01/27/lambda-go-sample-sam/</link><pubDate>Sat, 27 Jan 2018 22:00:00 +0900</pubDate><guid>https://techteco.github.io/2018/01/27/lambda-go-sample-sam/</guid><description>AWS SAMとは Github : AWS Serverless Application Model (AWS SAM) The goal of AWS SAM is to define a standard application model for serverless applications. This GitHub project is the starting point for AWS SAM, and contains general information, information about the model, and examples of common applications. 日本語訳 AWS SAMの目標は、サーバレス</description></item><item><title>待望のAWS LambdaのGolang対応！</title><link>https://techteco.github.io/2018/01/24/lambda-go-sample/</link><pubDate>Wed, 24 Jan 2018 22:00:00 +0900</pubDate><guid>https://techteco.github.io/2018/01/24/lambda-go-sample/</guid><description>公式ドキュメント Announcing Go Support for AWS Lambda Programming Model for Authoring Lambda Functions in Go サンプル Lambda Function Handler (Go) を読んで、サンプルを動かしてみる 前提 実行環境 1 2 $ go version go version go1.9.3 darwin/amd64 サンプルコード 適当</description></item><item><title>Golangのバージョン管理GVM(Go Version Manager)の使い方</title><link>https://techteco.github.io/2018/01/23/golang-gvm/</link><pubDate>Tue, 23 Jan 2018 20:00:00 +0900</pubDate><guid>https://techteco.github.io/2018/01/23/golang-gvm/</guid><description>GVMとは GVM(Github) Go Version Managerの頭文字をとってGVM 一言で言うと GVM provides an interface to manage Go versions. 日本語に直訳すると GVMは、Goバージョンを管理するためのイ</description></item></channel></rss>