<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SERVER on TechTeco</title><link>https://techteco.github.io/categories/server/</link><description>Recent content in SERVER on TechTeco</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Mon, 22 Jan 2018 20:00:00 +0900</lastBuildDate><atom:link href="https://techteco.github.io/categories/server/index.xml" rel="self" type="application/rss+xml"/><item><title>AnsibleでMacの開発環境を構築する</title><link>https://techteco.github.io/2018/01/22/ansible-mac/</link><pubDate>Mon, 22 Jan 2018 20:00:00 +0900</pubDate><guid>https://techteco.github.io/2018/01/22/ansible-mac/</guid><description>※2018年12月12日更新
定期的にmacのお掃除をしたくなるんですが、クリーンインストールして０から環境構築したいものです。
それ以外にも、PCの新規購入や買い替え、職場のPCが変わったりと、０から開発環境を構築する場面は多々あります。
しかしながら、この環境構築、やることが盛り沢山で大変です。
しかも頻繁にやる作業でもないので結構忘れてしまって、毎回調べながらやってる気がします。
いざ環境構築が終わって開発していると、あれインストールしてないや、あの設定どうだったっけ？
みたいなことは、あるあるですよね。
そこで、今後のことも考えて、macの環境構築をAnsibleを使って自動化（60〜70%くらい）したいと思います。
前提 Ansibleの基本的な知識があること
※参考サイト
Ansible Documentation(official)
実行環境 $ sw_vers ProductName:	Mac OS X ProductVersion:	10.14.1 BuildVersion:	18B75 手順 Macのクリーンインストール（ここでは省略） ※参考サイト
macOS を消去して再インストールする
Homebrewのインストール Homebrew公式
$ /usr/bin/ruby -e &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;#34; $ brew -v Homebrew 1.8.5 MacにAnsibleをインストール ここでは、brewコマンドを使ってAnsibleをインストール
$ brew install ansible $ ansible --version ansible 2.7.4 ファイル構成 tree コマンドで表示するとこんな感じです。
Ansible利用したことある方なら特に違和感ないと思います。
$ tree . ├── README.md ├── localhost ├── roles │ ├── awscli │ │ ├── tasks │ │ │ └── main.</description></item><item><title>オレオレSSL証明書</title><link>https://techteco.github.io/2017/03/08/oreoressl/</link><pubDate>Wed, 08 Mar 2017 08:00:00 +0900</pubDate><guid>https://techteco.github.io/2017/03/08/oreoressl/</guid><description>オレオレSSL証明書 情報はググれば沢山でてくるので割愛。 久々につくる機会があったので手順を自分用にメモ。
秘密鍵の作成 $ openssl genrsa -aes256 -out ./server.key 2048 Generating RSA private key, 2048 bit long modulus ..............................................................&amp;#43;&amp;#43;&amp;#43; .......&amp;#43;&amp;#43;&amp;#43; unable to write &amp;#39;random state&amp;#39; e is 65537 (0x10001) Enter pass phrase for ./server.key: Verifying - Enter pass phrase for ./server.key: CSRの作成 $ openssl req -new -sha256 -key ./server.key -out ./server.csr Enter pass phrase for ./server.key: You are about to be asked to enter information that will be incorporated into your certificate request.</description></item><item><title>ansibleでsshdの設定</title><link>https://techteco.github.io/2016/12/08/ansible-sshd/</link><pubDate>Thu, 08 Dec 2016 17:00:00 +0900</pubDate><guid>https://techteco.github.io/2016/12/08/ansible-sshd/</guid><description>前提 ここまで終わってること
ansible実行用のhostをvagrantのansible_localで設定 hostからansibleでcentOS 7.2の基本設定 やること ansibleでsshdの設定 ansible実行で設定反映 sshdの起動確認 1.ansibleでsshdの設定 ファイル構成 $ tree . ├── Vagrantfile ├── ansible.cfg └── provision ├── development ├── group_vars │ └── web.yml ├── host ├── roles │ ├── CentOS7.2 │ │ ├── handlers │ │ │ └── main.yml &amp;lt;&amp;lt;&amp;lt;&amp;lt; 変更 │ │ ├── tasks │ │ │ ├── chrony.yml │ │ │ ├── env.yml │ │ │ ├── locale.yml │ │ │ ├── main.yml &amp;lt;&amp;lt;&amp;lt;&amp;lt; 変更 │ │ │ ├── selinux.</description></item><item><title>Vagrant+VirtualBox+Ansibleで開発環境を構築する（その２）</title><link>https://techteco.github.io/2016/11/29/vagrant-ansible-local-2/</link><pubDate>Tue, 29 Nov 2016 20:00:00 +0900</pubDate><guid>https://techteco.github.io/2016/11/29/vagrant-ansible-local-2/</guid><description>ansible実行用のhostをvagrantのansible_localで設定 hostからansibleでcentOS 7.2の基本設定 ← ここ 前提 OS X El Capitan(10.11.6)
Vagrantインストール済み
$ vagrant version Installed Version: 1.8.7 Latest Version: 1.8.7 VirtualBoxインストール済み ※前回からバージョンアップ
$ VBoxManage -version 5.1.10r112026 2.hostからansibleでcentOS 7.2の基本設定 ansibleのBest Practicesを参考に、以下のファイル構成で準備する。
ファイル構成 $ tree . ├── Vagrantfile ├── ansible.cfg └── provision ├── development ├── group_vars │ └── web.yml ├── host ├── roles │ ├── CentOS7.2 │ │ ├── handlers │ │ │ └── main.yml │ │ ├── tasks │ │ │ ├── chrony.</description></item><item><title>Vagrant+VirtualBox+Ansibleで開発環境を構築する（その１）</title><link>https://techteco.github.io/2016/11/28/vagrant-ansible-local-1/</link><pubDate>Mon, 28 Nov 2016 08:10:00 +0900</pubDate><guid>https://techteco.github.io/2016/11/28/vagrant-ansible-local-1/</guid><description>ansible実行用のhostをvagrantのansible_localで設定 ← ここ hostからansibleでcentOS 7.2の基本設定 前提 OS X El Capitan(10.11.6)
Vagrantインストール済み
$ vagrant version Installed Version: 1.8.7 Latest Version: 1.8.7 VirtualBoxインストール済み $ VBoxManage -version 5.0.30r112061 1.ansible実行用のhostをvagrantのansible_localで設定 vagrantの初期化 Vagrantfile作成 $ vagrant init A `Vagrantfile` has been placed in this directory. You are now ready to `vagrant up` your first virtual environment! Please read the comments in the Vagrantfile as well as documentation on `vagrantup.com` for more information on using Vagrant. $ tree .</description></item></channel></rss>