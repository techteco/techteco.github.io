<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>COMMAND on TechTeco</title><link>https://techteco.github.io/categories/command/</link><description>Recent content in COMMAND on TechTeco</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Tue, 02 Apr 2019 21:53:00 +0900</lastBuildDate><atom:link href="https://techteco.github.io/categories/command/index.xml" rel="self" type="application/rss+xml"/><item><title>Macでmozjpegを使う</title><link>https://techteco.github.io/2019/04/02/mozjpeg/</link><pubDate>Tue, 02 Apr 2019 21:53:00 +0900</pubDate><guid>https://techteco.github.io/2019/04/02/mozjpeg/</guid><description>mozjpeg https://github.com/mozilla/mozjpeg
説明不要かと思いますが、mozillaプロジェクトのjpegエンコードです
ちなみに、オンラインツールでも提供されてます。
https://mozjpeg.codelove.de/
インストール macへのインストールはbrewコマンドでできます。
$ brew install mozjpeg 使い方 インストールしてもmozjpegというコマンドが使えるようになるわけではなく、
画像圧縮にはcjpegというコマンドを使います。
pathが通ってないですが、下記にインストールされてます。
$ /usr/local/Cellar/mozjpeg/3.3.1_1/bin/cjpeg 画像を圧縮する # 圧縮前サイズ $ ls -l sample.jpg | cut -d&amp;#39; &amp;#39; -f7 52611 # 圧縮品質80を指定 $ /usr/local/Cellar/mozjpeg/3.3.1_1/bin/cjpeg -optimize -quality 80 sample.jpg &amp;gt; sample80.jpg # 圧縮後サイズ $ ls -l sample80.jpg | cut -d&amp;#39; &amp;#39; -f8 32311 一括圧縮編(xargs) 事前にresizedフォルダを作成しておく
$ find . -name &amp;#39;*.jpg&amp;#39; -type f | sed &amp;#39;s!^.*/!!&amp;#39; | xargs -I% /usr/local/Cellar/mozjpeg/3.3.1_1/bin/cjpeg -optimize -quality 80 -outfile &amp;#34;resized/%&amp;#34; &amp;#34;%&amp;#34; ヘルプ $ /usr/local/Cellar/mozjpeg/3.</description></item><item><title>Macのsipsコマンドの使い方メモ</title><link>https://techteco.github.io/2019/04/02/sips/</link><pubDate>Tue, 02 Apr 2019 21:53:00 +0900</pubDate><guid>https://techteco.github.io/2019/04/02/sips/</guid><description>sipsコマンド sipsは**scriptable image processing system.**の略です。
This tool is used to query or modify raster image files and ColorSync ICC profiles.
Its functionality can also be used through the &amp;ldquo;Image Events&amp;rdquo; AppleScript suite.
簡単な使い方 画像の情報を参照 スマフォで撮影した画像を見てみるとこんな感じの情報が取得できました。
$ sips -g all sample.jpg /PATH/sample.jpg pixelWidth: 4608 pixelHeight: 2304 typeIdentifier: public.jpeg format: jpeg formatOptions: default dpiWidth: 72.000 dpiHeight: 72.000 samplesPerPixel: 3 bitsPerSample: 8 hasAlpha: no space: RGB profile: sRGB IEC61966-2.1 creation: 2018:08:04 09:39:37 make: XXXXXX model: XXXXXXXXXXXX software: XXXXXXXXXXXX 必要な項目だけ出力したい場合は、パラメータを指定すると可能です。</description></item><item><title>【メモ】MACにwgetをインストール</title><link>https://techteco.github.io/2015/09/28/mac-wget/</link><pubDate>Mon, 28 Sep 2015 22:29:00 +0900</pubDate><guid>https://techteco.github.io/2015/09/28/mac-wget/</guid><description>wgetをインストール 今更ながらmacにwgetが入ってないことに気づく。。 とういうわけで、macにwgetをインストールしてみる
公式サイト wget この時点での最新版は1.16ですね。
インストール手順 $ cd /tmp $ curl -O http://ftp.gnu.org/pub/gnu/wget/wget-1.16.tar.gz $ tar xvzf wget-1.16.tar.gz $ cd wget-1.16 $ sudo ./configure --with-ssl=openssl $ sudo make $ sudo make install インストール確認 $ which wget /usr/local/bin/wget</description></item><item><title>【小ネタ】簡単に連番のディレクトリを作る方法</title><link>https://techteco.github.io/2015/09/10/seq-dir/</link><pubDate>Thu, 10 Sep 2015 18:05:00 +0900</pubDate><guid>https://techteco.github.io/2015/09/10/seq-dir/</guid><description>連番のディレクトリを作成 作業用に、とにかく連番でディレクトリを作りたいことがあって、便利なコマンドさがしてたらとても簡単んだったのでメモ。 1から10までのディレクトリを作る場合
コマンド $ mkdir {1..10} 実行結果 $ tree ./ ./ ├── 1 ├── 10 ├── 2 ├── 3 ├── 4 ├── 5 ├── 6 ├── 7 ├── 8 └── 9 10 directories, 0 files</description></item><item><title>Macにtreeコマンドをいれる</title><link>https://techteco.github.io/2015/08/26/mac-tree-command/</link><pubDate>Wed, 26 Aug 2015 21:53:00 +0900</pubDate><guid>https://techteco.github.io/2015/08/26/mac-tree-command/</guid><description>treeコマンド コマンドでディレクトリ構造を表示する方法さがしてたら、便利なのがありました。ていうか、知らないのが恥ずかしいレベルなのか。。
インストール macにbrewを使ってインストールする
$ brew install tree $ tree --version tree v1.7.0 (c) 1996 - 2014 by Steve Baker, Thomas Moore, Francesc Rocher, Florian Sesser, Kyosuke Tokoro 簡単な使い方 表示したいpathに移動して
$ tree . ├── test1 │ └── test.txt ├── test2 │ └── test.txt └── test3 └── test.txt 3 directories, 3 files</description></item></channel></rss>