<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>S3 on TechTeco</title><link>https://techteco.github.io/tags/s3/</link><description>Recent content in S3 on TechTeco</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Fri, 09 Feb 2018 22:00:00 +0900</lastBuildDate><atom:link href="https://techteco.github.io/tags/s3/index.xml" rel="self" type="application/rss+xml"/><item><title>LambdaのGolangでS3を操作する</title><link>https://techteco.github.io/2018/02/09/lambda-go-s3/</link><pubDate>Fri, 09 Feb 2018 22:00:00 +0900</pubDate><guid>https://techteco.github.io/2018/02/09/lambda-go-s3/</guid><description>やること S3に保存されたファイルを取得して、データを追記して保存する
S3上のファイル存在確認(ListObjectsV2)
ファイルが存在すれば、ファイル取得(GetObject)
追記してS3に保存(PutObject)
Lambdaの作成 さっそく
golang main.go package main import ( &amp;#34;bytes&amp;#34; &amp;#34;context&amp;#34; &amp;#34;fmt&amp;#34; &amp;#34;log&amp;#34; &amp;#34;os&amp;#34; &amp;#34;github.com/aws/aws-lambda-go/lambda&amp;#34; &amp;#34;github.com/aws/aws-sdk-go/aws&amp;#34; &amp;#34;github.com/aws/aws-sdk-go/aws/awserr&amp;#34; &amp;#34;github.com/aws/aws-sdk-go/aws/endpoints&amp;#34; &amp;#34;github.com/aws/aws-sdk-go/aws/session&amp;#34; &amp;#34;github.com/aws/aws-sdk-go/service/s3&amp;#34; ) func HandleRequest(ctx context.Context) (string, error) { var BUCKET = os.Getenv(&amp;#34;BUCKET&amp;#34;) var KEY = os.Getenv(&amp;#34;KEY&amp;#34;) svc := s3.New(session.New(), &amp;amp;aws.Config{ Region: aws.String(endpoints.ApNortheast1RegionID), }) // ファイルの存在確認 loo, errlo := svc.ListObjectsV2(&amp;amp;s3.ListObjectsV2Input{ Bucket: aws.String(BUCKET), Prefix: aws.String(KEY), }) if errlo != nil { if aerr, ok := errlo.(awserr.Error); ok { switch aerr.</description></item><item><title>【メモ】AWS CLIをつかってS3にファイルアップロード</title><link>https://techteco.github.io/2016/11/22/s3-sync/</link><pubDate>Tue, 22 Nov 2016 08:10:00 +0900</pubDate><guid>https://techteco.github.io/2016/11/22/s3-sync/</guid><description>AWS CLIをつかってS3にファイルアップロード hugoで出力されたファイルをS3にアップするコマンドのメモ 前提 awscliでインストール済 対象のバケットのアクセスポリシー設定済 コマンド public配下を、公開用のS3バケットにsyncする
$ aws s3 sync ~/techte.co/public/ s3://techte.co --exact-timestamps 同期したくないファイルを除外するには、&amp;ndash;excludeオプションをつける 下の例は、.から始まる隠しファイルや.gitなどを除外する
$ aws s3 sync ~/techte.co/public/ s3://techte.co --exact-timestamps --exclude &amp;#34;.*&amp;#34;</description></item></channel></rss>