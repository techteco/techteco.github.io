<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kms on TechTeco</title><link>https://techteco.github.io/tags/kms/</link><description>Recent content in Kms on TechTeco</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Tue, 30 Jan 2018 22:00:00 +0900</lastBuildDate><atom:link href="https://techteco.github.io/tags/kms/index.xml" rel="self" type="application/rss+xml"/><item><title>Lambda(Golang)からAWS KMSを復号化する方法</title><link>https://techteco.github.io/2018/01/30/lambda-go-kms/</link><pubDate>Tue, 30 Jan 2018 22:00:00 +0900</pubDate><guid>https://techteco.github.io/2018/01/30/lambda-go-kms/</guid><description>KMSについては、AWS KMSの使い方を参考
環境構築 暗号化データ 暗号化する。ここでは、shared(alias)というkeyを使う。
※自分の環境に合わせて。
$ aws kms encrypt \ --key-id alias/shared \ --plaintext &amp;#34;I am seacret word&amp;#34; \ --output text \ --query CiphertextBlob ここで出力された値をLambdaの環境変数に渡します。
Lambda構築用のSAMテンプレート 参考はこちらのAWS SAMを使ってみるをご確認ください。
lambda-go-kms.yaml AWSTemplateFormatVersion : &amp;#39;2010-09-09&amp;#39; Transform: AWS::Serverless-2016-10-31 Description: KMS decrypt. Resources: KMSDecrypt: Type: AWS::Serverless::Function Properties: Handler: main Runtime: go1.x CodeUri: main.zip # KMSのDecrypt用のポリシー定義 Policies: - KMSDecryptPolicy: # 暗号化に使ったKeyID # aliasは対応していない KeyId: &amp;#34;01234567-0123-1234-1234-123456789012&amp;#34; Environment: Variables: # Encrypted: &amp;#34;ここに暗号化したCiphertextBlobの値&amp;#34; Golangのソースコード main.go package main import ( &amp;#34;context&amp;#34; &amp;#34;encoding/base64&amp;#34; &amp;#34;fmt&amp;#34; &amp;#34;os&amp;#34; &amp;#34;github.</description></item><item><title>AWS KMSの使い方</title><link>https://techteco.github.io/2018/01/26/kms/</link><pubDate>Fri, 26 Jan 2018 22:00:00 +0900</pubDate><guid>https://techteco.github.io/2018/01/26/kms/</guid><description>AWS KMSとは AWS Key Management Service とは
AWS Key Management Service (AWS KMS) は、データの暗号化に使用される暗号化キーの作成と管理を容易にするマネージド型サービスです。AWS KMS は、Amazon Elastic Block Store (Amazon EBS)、Amazon Simple Storage Service (Amazon S3)、Amazon Redshift、Amazon Elastic Transcoder、Amazon WorkMail、Amazon Relational Database Service (Amazon RDS) などの他の AWS サービスと統合されており、ユーザーが管理する暗号化キーでのデータの暗号化を簡単にします。また AWS KMS は AWS CloudTrail とも統合されており、キーの使用ログを表示できるため、監査、規制、およびコンプライアンスの要求に応えるために役立ちます。
CloudformationでCMKを作成 CSK作成 AWS Key Management Service (AWS KMS) でカスタマーマスターキー (CMK) を作成します。
AWS::KMS::Key
定義ファイル key.yaml AWSTemplateFormatVersion: &amp;#34;2010-09-09&amp;#34; Description: &amp;#34;Cloudformation Sample : Create Sample KMS Key&amp;#34; Parameters: pTagKey: Type: String pTagValue: Type: String Resources: SampleKey: Type: &amp;#34;AWS::KMS::Key&amp;#34; Properties: Description: &amp;#34;A sample key&amp;#34; KeyPolicy: Version: &amp;#34;2012-10-17&amp;#34; Id: &amp;#34;key-default-1&amp;#34; Statement: - Sid: Enable IAM User Permissions Effect: Allow Principal: AWS: !</description></item></channel></rss>