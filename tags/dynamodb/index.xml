<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DynamoDB on TechTeco</title><link>https://techteco.github.io/tags/dynamodb/</link><description>Recent content in DynamoDB on TechTeco</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Tue, 25 Apr 2017 06:30:00 +0900</lastBuildDate><atom:link href="https://techteco.github.io/tags/dynamodb/index.xml" rel="self" type="application/rss+xml"/><item><title>DynamoDBをAWS CLIで操作してみる（アイテム操作）</title><link>https://techteco.github.io/2017/04/25/dynamodb-usage-item/</link><pubDate>Tue, 25 Apr 2017 06:30:00 +0900</pubDate><guid>https://techteco.github.io/2017/04/25/dynamodb-usage-item/</guid><description>公式ドキュメント AWS CLI Command Reference dynamodb 前提 DynamoDBローカルを使ってみるが完了している
DynamoDBをAWS CLIで操作してみる（テーブル操作）が完了している
参考 コマンドリファレンス aws dynamodb put-item aws dynamodb get-item aws dynamodb update-item aws dynamodb delete-item aws dynamodb batch-write-item aws dynamodb batch-get-item 事前準備 作業用ディレクトリへ移動 $ cd ~/dynamodbwork テーブル作成 定義用jsonファイル $ more ./json/musicTableDefinition.json { &amp;#34;TableName&amp;#34;: &amp;#34;Music&amp;#34;, &amp;#34;AttributeDefinitions&amp;#34;: [ { &amp;#34;AttributeName&amp;#34;: &amp;#34;Artist&amp;#34;, &amp;#34;AttributeType&amp;#34;: &amp;#34;S&amp;#34; }, { &amp;#34;AttributeName&amp;#34;: &amp;#34;SongTitle&amp;#34;, &amp;#34;AttributeType&amp;#34;: &amp;#34;S&amp;#34; } ], &amp;#34;KeySchema&amp;#34;: [ { &amp;#34;KeyType&amp;#34;: &amp;#34;HASH&amp;#34;, &amp;#34;AttributeName&amp;#34;: &amp;#34;Artist&amp;#34; }, { &amp;#34;KeyType&amp;#34;: &amp;#34;RANGE&amp;#34;, &amp;#34;AttributeName&amp;#34;: &amp;#34;SongTitle&amp;#34; } ], &amp;#34;ProvisionedThroughput&amp;#34;: { &amp;#34;WriteCapacityUnits&amp;#34;: 1, &amp;#34;ReadCapacityUnits&amp;#34;: 1 } } $ aws dynamodb \ create-table \ --endpoint-url http://localhost:8000 \ --cli-input-json file://json/musicTableDefinition.</description></item><item><title>DynamoDBをAWS CLIで操作してみる（テーブル操作）</title><link>https://techteco.github.io/2017/04/22/dynamodb-usage-table/</link><pubDate>Sat, 22 Apr 2017 22:30:00 +0900</pubDate><guid>https://techteco.github.io/2017/04/22/dynamodb-usage-table/</guid><description>公式ドキュメント AWS CLI Command Reference dynamodb 前提 DynamoDBローカルを使ってみるが完了している 参考 コマンドリファレンス aws dynamodb list-tables aws dynamodb create-table aws dynamodb describe-table aws dynamodb update-table aws dynamodb delete-table 事前準備 作業用ディレクトリ作成 $ mkdir -p ~/dynamodbwork/json; cd ./dynamodbwork テーブル操作 テーブルのリストを表示する $ aws dynamodb \ list-tables \ --endpoint-url http://localhost:8000 &amp;gt; ./json/list-tables.json $ more ./json/list-tables.json 出力結果のjsonファイル
{ &amp;#34;TableNames&amp;#34;: [] } テーブル作成 定義用jsonファイル $ more ./json/testTableDefinition.json { &amp;#34;TableName&amp;#34;: &amp;#34;testTable&amp;#34;, &amp;#34;AttributeDefinitions&amp;#34;: [ { &amp;#34;AttributeName&amp;#34;: &amp;#34;hash_key_attribute_name&amp;#34;, &amp;#34;AttributeType&amp;#34;: &amp;#34;S&amp;#34; }, { &amp;#34;AttributeName&amp;#34;: &amp;#34;range_key_attribute_name&amp;#34;, &amp;#34;AttributeType&amp;#34;: &amp;#34;S&amp;#34; } ], &amp;#34;KeySchema&amp;#34;: [ { &amp;#34;KeyType&amp;#34;: &amp;#34;HASH&amp;#34;, &amp;#34;AttributeName&amp;#34;: &amp;#34;hash_key_attribute_name&amp;#34; }, { &amp;#34;KeyType&amp;#34;: &amp;#34;RANGE&amp;#34;, &amp;#34;AttributeName&amp;#34;: &amp;#34;range_key_attribute_name&amp;#34; } ], &amp;#34;ProvisionedThroughput&amp;#34;: { &amp;#34;WriteCapacityUnits&amp;#34;: 5, &amp;#34;ReadCapacityUnits&amp;#34;: 5 } } $ aws dynamodb \ create-table \ --endpoint-url http://localhost:8000 \ --cli-input-json file://json/testTableDefinition.</description></item><item><title>DynamoDBローカルを使ってみる</title><link>https://techteco.github.io/2017/04/22/dynamodb-local-setup/</link><pubDate>Sat, 22 Apr 2017 22:00:00 +0900</pubDate><guid>https://techteco.github.io/2017/04/22/dynamodb-local-setup/</guid><description>公式ドキュメント DynamoDB ローカル (ダウンロード可能バージョン) のセットアップ 前提 AWS CLIの設定とJavaが導入済み $ aws --version aws-cli/1.11.76 Python/2.7.10 Darwin/16.5.0 botocore/1.5.39 $ java -version java version &amp;#34;1.8.0_121&amp;#34; Java(TM) SE Runtime Environment (build 1.8.0_121-b13) Java HotSpot(TM) 64-Bit Server VM (build 25.121-b13, mixed mode) ダウンロード $ cd your_path $ mkdir dynamodb_local_latest $ curl -sL https://s3-ap-northeast-1.amazonaws.com/dynamodb-local-tokyo/dynamodb_local_latest.tar.gz | tar zx -C your_path/dynamodb_local_latest 実行 $ java -Djava.library.path=./DynamoDBLocal_lib -jar DynamoDBLocal.jar -sharedDb Initializing DynamoDB Local with the following configuration: Port:	8000 InMemory:	false DbPath:	null SharedDb:	true shouldDelayTransientStatuses:	false CorsParams:	* 実行オプション -cors value JavaScript で CORS (Cross-Origin Resource Sharing) のサポートを有効にします。特定のドメインのカンマ区切りの &amp;ldquo;許可&amp;rdquo; リストを指定する必要があります。 -cors のデフォルト設定は、パブリックアクセスを許可するアスタリスク（*）です。</description></item></channel></rss>